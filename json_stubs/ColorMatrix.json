{"name":"ColorMatrix","methods":{"Tint_LowLuma":{"usage":[" :Tint_LowLuma(float64 angle, float64 len)"]},"Tint_LowLumaBetter":{"usage":[" :Tint_LowLumaBetter(float64 angle, float64 len)"]},"_RotB1":{"usage":[" :_RotB1(float64 angle)"]},"Hue":{"usage":[" :Hue(float64 hue, float64 rweight, float64 gweight, float64 bweight)"]},"_RotG1":{"usage":[" :_RotG1(float64 angle)"]},"header_text":"Discovered Methods","_RotG2":{"usage":[" :_RotG2(float64 s, float64 c)"]},"Identity":{"usage":[" :Identity()"]},"_RotR1":{"usage":[" :_RotR1(float64 angle)"]},"_RotR2":{"usage":[" :_RotR2(float64 s, float64 c)"]},"Determinant":{"usage":["float64 :Determinant()"]},"_Scale3":{"usage":[" :_Scale3(float64 r, float64 g, float64 b)"]},"_Scale4":{"usage":[" :_Scale4(float64 r, float64 g, float64 b, float64 scale)"]},"_mulCM":{"usage":["ColorMatrix :_mulCM(ColorMatrix cm)"]},"Rotate":{"usage":[" :Rotate(float64 r, float64 g, float64 b, float64 angle)"]},"Inverse":{"usage":["ColorMatrixFull :Inverse()"]},"IsIdentity":{"usage":["boolean :IsIdentity()"]},"Offset":{"usage":[" :Offset(float64 r, float64 g, float64 b)"]},"RGBtoYUV":{"usage":[" :RGBtoYUV()"]},"GrayScale":{"usage":[" :GrayScale(float64 rweight, float64 gweight, float64 bweight)"]},"Blend":{"usage":[" :Blend(ColorMatrix cm, float64 blend)"]},"_newDef":{"usage":["ColorMatrix :_newDef()"]},"info_text":"Discovered methods might be available in many contexts, but most typically in Fuse scripts","YUVtoRGB":{"usage":[" :YUVtoRGB()"]},"Adjoint":{"usage":[" :Adjoint()"]},"_mulNum":{"usage":["ColorMatrix :_mulNum(float64 num)"]},"RotateWeighted":{"usage":[" :RotateWeighted(float64 r, float64 g, float64 b, float64 angle, float64 rweight, float64 gweight, float64 bweight)"]},"_newCM":{"usage":["ColorMatrix :_newCM(ColorMatrix cm)"]},"Saturate":{"usage":[" :Saturate(float64 sat, float64 rweight, float64 gweight, float64 bweight)"]},"__eq":{"usage":["boolean :__eq(ColorMatrix cm)"]},"_RotB2":{"usage":[" :_RotB2(float64 s, float64 c)"]},"Tint":{"usage":[" :Tint(float64 angle, float64 length, float64 rweight, float64 gweight, float64 bweight)"]},"Shear":{"usage":[" :Shear(float64 g, float64 r)"]},"_newCMF":{"usage":["ColorMatrix :_newCMF(ColorMatrixFull cm)"]},"Tint_HighLuma":{"usage":[" :Tint_HighLuma(float64 angle, float64 len)"]},"__add":{"usage":["ColorMatrix :__add(ColorMatrix cm)"]},"Tint_HighLumaBetter":{"usage":[" :Tint_HighLumaBetter(float64 angle, float64 len)"]}},"properties":{"info_text":"Discovered properties might be available in many contexts, but most typically in Fuse scripts","TypeName":{"return_type":"string","access_class":"Read Only"},"def_GWeight":{"return_type":"float64","access_class":"Read Only"},"header_text":"Discovered Properties","def_RWeight":{"return_type":"float64","access_class":"Read Only"},"TypeNamePtr":{"return_type":"string","access_class":"Read Only"},"def_BWeight":{"return_type":"float64","access_class":"Read Only"}}}