{"name":"ImgRectI","methods":{"FlipX":{"usage":["ImgRectI :FlipX()"]},"_newCopy":{"usage":["ImgRectI :_newCopy(ImgRectI x)"]},"FlipY":{"usage":["ImgRectI :FlipY()"]},"Inflate":{"usage":["ImgRectI :Inflate(float32 x, float32 y)"]},"IsEmpty":{"usage":["boolean :IsEmpty()"]},"Height":{"usage":["int32 :Height()"]},"header_text":"Discovered Methods","_newDef":{"usage":["ImgRectI :_newDef()"]},"info_text":"Discovered methods might be available in many contexts, but most typically in Fuse scripts","__tostring":{"usage":["string :__tostring()"]},"_newNums":{"usage":["ImgRectI :_newNums(int32 l, int32 b, int32 r, int32 t)"]},"Scale":{"usage":["ImgRectI :Scale(float32 x, float32 y)"]},"_IntersectNums":{"usage":["ImgRectI :_IntersectNums(int32 l, int32 b, int32 r, int32 t)"]},"Offset":{"usage":["ImgRectI :Offset(float32 x, float32 y)"]},"_IsWithinNums":{"usage":["boolean :_IsWithinNums(int32 x, int32 y)"]},"IsNull":{"usage":["@vIh%<boolean :IsNull()"]},"_IsWithinRect":{"usage":["boolean :_IsWithinRect(ImgRectI rect)"]},"Normalise":{"usage":["ImgRectI :Normalise()"]},"_SetNums":{"usage":[" :_SetNums(int32 l, int32 b, int32 r, int32 t)"]},"Width":{"usage":["int32 :Width()"]},"_UnionNums":{"usage":["ImgRectI :_UnionNums(int32 l, int32 b, int32 r, int32 t)"]},"_IntersectRect":{"usage":["ImgRectI :_IntersectRect(ImgRectI rect)"]},"_UnionRect":{"usage":["ImgRectI :_UnionRect(ImgRectI rect)"]}},"properties":{"header_text":"Discovered Properties","info_text":"Discovered properties might be available in many contexts, but most typically in Fuse scripts","TypeName":{"return_type":"string","access_class":"Read Only"},"TypeNamePtr":{"return_type":"string","access_class":"Read Only"}}}