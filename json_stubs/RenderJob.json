{
    "attributes": {
        "REGS_VersionString": {
            "type": "Built: May 20 2023",
            "value": "string"
        },
        "REGI_Version": {
            "type": "0",
            "value": "number (integer)"
        },
        "REGB_Hide": {
            "type": "false",
            "value": "boolean"
        },
        "REGB_SupportsDoD": {
            "type": "false",
            "value": "boolean"
        },
        "REGI_ClassType": {
            "type": "0 = CT_Any",
            "value": "number (integer)"
        },
        "REGI_Priority": {
            "type": "0",
            "value": "number (integer)"
        },
        "REGS_ID": {
            "type": "RenderJob",
            "value": "string"
        },
        "REGS_Name": {
            "type": "RenderJob",
            "value": "string"
        },
        "REGB_Unpredictable": {
            "type": "false",
            "value": "boolean"
        },
        "REGB_ControlView": {
            "type": "false",
            "value": "boolean"
        }
    },
    "name": "RenderJob",
    "methods": {
        "GetSlaveList": {
            "short_help": "Gets a table of slaves assigned to this job",
            "usage": [
                "table :GetSlaveList()"
            ]
        },
        "GetRenderReport": [],
        "RetryRenderNode": {
            "short_help": "Attempts to reuse slaves that have previously failed",
            "description": "Arguments:\n    node - the RenderNode object to retry\nIf 'node' is not specified, all failed RenderNodes are retried",
            "usage": [
                " :RetryRenderNode([RenderNode node])"
            ]
        },
        "ClearCompletedFrames": {
            "short_help": "Clears the list of completed frames, restarting the render",
            "usage": [
                " :ClearCompletedFrames()"
            ]
        },
        "_Heartbeat": [],
        "GetUnrenderedFrames": {
            "short_help": "Returns the remaining frames to be rendered",
            "description": "Returns a string of frame numbers in the form '1..10,15,20'",
            "usage": [
                "string :GetUnrenderedFrames()"
            ]
        },
        "IsRendering": {
            "short_help": "Returns true if job is currently rendering",
            "usage": [
                "boolean :IsRendering()"
            ]
        },
        "GetFrames": {
            "short_help": "Returns the total set of frames to be rendered",
            "description": "Returns a string of frame numbers in the form '1..10,15,20'",
            "usage": [
                "string :GetFrames()"
            ]
        },
        "SetFrames": {
            "short_help": "Specifies the set of frames to render",
            "description": "Arguments:\n    frames - a list in the form '1..10,15,20'",
            "usage": [
                " :SetFrames(string frames)"
            ]
        },
        "GetFailedSlaves": {
            "short_help": "Lists all slaves that failed this job",
            "usage": [
                "table :GetFailedSlaves()"
            ]
        }
    },
    "class_inheritance": [
        "Object"
    ]
}