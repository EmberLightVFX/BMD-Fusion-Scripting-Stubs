{"methods":{"AbortRender":[],"Heartbeat":[],"NetRenderAbort":[],"GetNextKeyTime":{"short_help":"Gets the next key time","usage":["number :GetNextKeyTime([number time], [Tool tool])"],"description":"Returns: The timestamp of the keyframe after the given time\n\tfor the specified tool, or for any tool, if none is specified.\n\tIf no time is given, the first keyframe time is returned."},"NetRenderEnd":[],"GetPrevKeyTime":{"short_help":"Gets the previous key time","usage":["number :GetPrevKeyTime([number time], [Tool tool])"],"description":"Returns: The timestamp of the keyframe before the given time\n\tfor the specified tool, or for any tool, if none is specified.\n\tIf no time is given, the last keyframe time is returned."},"DisableSelectedTools":{"usage":[" :DisableSelectedTools()"],"short_help":"Pass-through the selected tools"},"CopySettings":{"short_help":"Copy a list of tools to a settings table","usage":["table :CopySettings()","table :CopySettings(Tool tool)","table :CopySettings(table toollist)"],"description":"Can be passed a single tool or a table of tools.\nIf no args are given, the currently selected tools will be copied."},"SaveCopyAs":{"usage":[" :SaveCopyAs()"],"short_help":"Save a copy of the composition"},"_SaveCopyAs":{"usage":[" :_SaveCopyAs()"],"short_help":"Save a copy of the composition"},"SaveAs":{"usage":[" :SaveAs()"],"short_help":"Save the composition"},"Copy":{"short_help":"Copy a list of tools to the Clipboard","usage":["boolean :Copy()","boolean :Copy(Tool tool)","boolean :Copy(table toollist)"],"description":"Can be passed a single tool or a table of tools.\nIf no args are given, the currently selected tools will be copied."},"_Save":[],"IsReadOnly":[],"SetActiveTool":{"usage":[" :SetActiveTool(Tool tool)"],"short_help":"Set the currently active tool"},"_SetCurrentTime":[],"FindTool":{"see_also":"[FindToolbyID()](#FindToolbyID)","short_help":"Finds first tool by name","usage":["Tool :FindTool(string name)"]},"FindToolByID":{"see_also":"[FindTool()](#FindTool)","short_help":"Finds tools of a given type","usage":["Tool :FindToolByID(string id, [Tool prev])"],"description":"Args:    id   - string type of tool\n         prev - optional tool to start search from"},"AddTool":{"short_help":"Adds a tool to the comp at a given position","usage":["Tool :AddTool(string id, [boolean defsettings], [number xpos], [number ypos])"],"description":"Args:    id          - string type of tool to be created\n         defsettings - boolean to use saved default settings\n         xpos, ypos  - integer position on flow view"},"AddSettingAction":{"usage":["Tool :AddSettingAction(string filename, [number xpos], [number ypos])"],"short_help":"Adds a .settings to the comp"},"AddToolAction":{"usage":["Tool :AddToolAction(string id, [number xpos], [number ypos])"],"short_help":"Adds a tool to the comp"},"SetData":{"see_also":"[GetData()](#GetData)","short_help":"Set custom persistent data","usage":[" :SetData(string name, (number|string|boolean|table) value)"]},"Close":{"usage":[" :Close()"],"short_help":"Close the composition"},"_SaveAs":{"usage":[" :_SaveAs()"],"short_help":"Save the composition"},"Lock":{"see_also":"[Unlock()](#Unlock)","short_help":"Lock the composition from updating","usage":[" :Lock()"]},"Paste":{"short_help":"Paste tools from the Clipboard","usage":["boolean :Paste([table settings])"],"description":"'settings' may contain the results of Copy() or Operator:SaveSettings()\nIf no args are given, the Clipboard will be pasted."},"ExpandZone":[],"Unlock":{"see_also":"[Lock()](#Lock)","short_help":"Unlock the composition","usage":[" :Unlock()"]},"header_text":"Methods","MapPath":{"see_also":"[ReverseMapPath()](#ReverseMapPath), [MapPathSegments()](#MapPathSegments), [MapPath()](Fusion.md#MapPath)","short_help":"Expands path mappings in a path string","usage":["string :MapPath(string path)"],"description":"Returns the path string with all mappings expanded. Only the first path of a multipath is returned."},"IsRendering":{"usage":["boolean :IsRendering()"]},"StartUndo":{"see_also":"[EndUndo()](#EndUndo), [Undo()](#Undo), [Redo()](#Redo)","short_help":"Start an undo event","usage":[" :StartUndo(string name)"]},"EndUndo":{"see_also":"[StartUndo()](#StartUndo), [Undo()](#Undo), [Redo()](#Redo)","short_help":"End an undo event","usage":[" :EndUndo(boolean keep)"]},"SetReadOnly":[],"SaveVersion":{"usage":["boolean :SaveVersion(string filename, [number version])"],"short_help":"Save the composition"},"Save":{"usage":["boolean :Save(string filename)"],"short_help":"Save the composition"},"NetRenderStart":[],"ReverseMapPath":{"see_also":"[MapPath()](#MapPath), [MapPathSegments()](#MapPathSegments), [ReverseMapPath()](Fusion.md#ReverseMapPath)","short_help":"Collapses a path into best-matching path map","usage":["string :ReverseMapPath(string mapped)"],"description":"Returns the path string relative to nearest applicable mapped path."},"Export":{"see_also":"[Save()](#Save)","short_help":"Exports the current composition to a file.","usage":["boolean :Export(string filename)"],"description":"This saves the composition to an external .comp file, translating as required."},"AddMedia":[],"Reset":[],"GetViewList":[],"IsZoneExpanded":[],"GetToolList":{"short_help":"Returns a list of all tools, or selected tools, in the composition","usage":["table :GetToolList([boolean selected], [string regid])"],"description":"selected - pass 'true' to get only selected tools\nregid    - pass a Registry ID string to get only tools of that type"},"IsViewShowing":[],"ShowView":[],"AskRenderSettings":[],"GetPrefs":{"see_also":"[SetPrefs()](#SetPrefs)","short_help":"Retrieve a table of preferences","usage":["table :GetPrefs([string prefname], [boolean exclude-defaults])"]},"ChooseAction":{"short_help":"Displays a dialog with a list of selectable actions","usage":["string :ChooseAction(boolean execute, object target)"],"description":"Allows the user to select from a list of actions, and returns the action."},"ChooseTool":{"short_help":"Displays a dialog with a list of selectable tools","usage":["string, string :ChooseTool(boolean execute)"],"description":"Allows the user to select from a list of tools, and returns the tool ID.\nIf a macro is selected, the path is also returned."},"SetPrefs":{"see_also":"[GetPrefs()](#GetPrefs)","short_help":"Set preferences from a table of attributes","usage":[" :SetPrefs(string prefname, value val)"," :SetPrefs(table prefs)"]},"GetCompPathMap":{"short_help":"Returns a table of all Composition path maps","usage":["table :GetCompPathMap([boolean built_ins], [boolean defaults])"],"description":"Args:  built_ins - include built-in path maps (default: true)\n       defaults  - include factory default path maps (default: true)\nReturns: Table of path strings, keyed by map name."},"MapPathSegments":{"see_also":"[ReverseMapPath()](#ReverseMapPath), [MapPath()](#MapPath), [MapPathSegments()](Fusion.md#MapPathSegments)","short_help":"Expands all path mappings in a multipath","usage":["table :MapPathSegments(string path)"],"description":"Returns a table of path strings with all mappings expanded. All paths of a multipath are returned."},"GetConsoleHistory":[],"Execute":[],"UpdateViews":[],"GetFrameList":[],"Print":[],"Loop":{"short_help":"Enables looping interactive playback","usage":[" :Loop(boolean enable)"," :Loop(string mode)"],"description":"where \"mode\" is one of the following:\n   \"none\"\n   \"loop\"\n   \"pingpong\""},"Stop":{"usage":[" :Stop()"],"short_help":"Stops interactive playback"},"IsPlaying":{"usage":["boolean :IsPlaying()"]},"Play":{"usage":[" :Play([boolean reverse])"],"short_help":"Starts interactive playback"},"GetData":{"see_also":"[SetData()](#SetData)","short_help":"Get custom persistent data","usage":["(number|string|boolean|table) :GetData([string name])"]},"AskUser":{"short_help":"Present a custom dialog to the user, and return selected values","usage":["table :AskUser(string title, table controls)"],"description":"Returns a table of result values, determined by individual control types"},"RunScript":{"usage":[" :RunScript(string filename)"],"short_help":"Run a script"},"_Output_Error":[],"_Output_Print":[],"GetPreviewList":{"usage":["table :GetPreviewList([boolean include_globals])"],"short_help":"Retrieves a table of previews"},"NetRenderTime":[],"ClearUndo":{"see_also":"[StartUndo()](#StartUndo), [EndUndo()](#EndUndo), [Undo()](#Undo), [Redo()](#Redo)","short_help":"Clears the Undo/Redo history","usage":[" :ClearUndo()"]},"Redo":{"see_also":"[StartUndo()](#StartUndo), [EndUndo()](#EndUndo), [Undo()](#Undo)","short_help":"Redo one or more changes to the composition","usage":[" :Redo(number count)"]},"Undo":{"see_also":"[StartUndo()](#StartUndo), [EndUndo()](#EndUndo), [Redo()](#Redo)","short_help":"Undo one or more changes to the composition","usage":[" :Undo(number count)"]},"GetRedoStack":[],"GetUndoStack":[],"IsLocked":{"usage":["boolean :IsLocked()"],"see_also":"[Unlock()](#Unlock), [Lock()](#Lock)"},"Render":{"usage":["boolean :Render([boolean wait], [number start], [number end], [number proxy], [boolean hiq], [boolean motionblur])","boolean :Render(table settings)"],"short_help":"Start a render"},"AbortRenderUI":[]},"attributes":{"REGB_Hide":{"type":"false","value":"boolean"},"REGB_SupportsDoD":{"type":"false","value":"boolean"},"REGS_Name":{"type":"Composition","value":"string"},"REGI_Version":{"type":"0","value":"number (integer)"},"REGI_ClassType":{"type":"0 = CT_Any","value":"number (integer)"},"REGB_Unpredictable":{"type":"false","value":"boolean"},"REGS_VersionString":{"type":"Built: Jul 19 2023","value":"string"},"REGS_ID":{"type":"Composition","value":"string"},"REGB_ControlView":{"type":"false","value":"boolean"},"REGI_Priority":{"type":"0","value":"number (integer)"}},"name":"Composition","properties":{"AutoPos":{"return_type":"boolean","access_class":"Read/Write"},"UpdateMode":{"access_class":"Read/Write"},"YPos":{"return_type":"number","see_also":"[XPos](#XPos)","access_class":"Read/Write"},"XPos":{"return_type":"number","see_also":"[YPos](#YPos)","access_class":"Read/Write"},"CurrentFrame":{"return_type":"FuFrame","short_help":"Represents the currently active frame for this composition","access_class":"Read Only"},"CurrentTime":{"return_type":"number","short_help":"The current time position for this composition","access_class":"Read/Write"},"ActiveTool":{"return_type":"Tool","short_help":"Represents the currently active tool on this comp","access_class":"Read Only"},"header_text":"Properties"},"class_inheritance":["Object"]}