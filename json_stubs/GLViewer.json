{"name":"GLViewer","methods":{"GetAlphaOverlayColor":{"short_help":"Return which alpha overlay is being used","usage":["number :GetAlphaOverlayColor()"],"description":"0 = None, 1 = Red, 2 = Green, 3 = Yellow, 4 = Blue, 5 = Cyan, 6 = Magenta, 7 = White."},"SetAlphaOverlayColor":{"short_help":"Select which alpha overlay to use","usage":[" :SetAlphaOverlayColor(number color)"],"description":"0 = None, 1 = Red, 2 = Green, 3 = Yellow, 4 = Blue, 5 = Cyan, 6 = Magenta, 7 = White."},"GetChannel":{"usage":["number :GetChannel()"],"short_help":"Return which channel is shown"},"SetChannel":{"short_help":"Select which channel to show","usage":[" :SetChannel(number channel, boolean toggle)"],"description":"When \"toggle\" is true, the first SetChannel(CHAN_Z) call will set the viewer to Z, while the second SetChannel(CHAN_Z) call will set the viewer to CHAN_COLOR"},"Redraw":{"usage":[" :Redraw()"],"short_help":"Refreshes the viewer"},"IsLUTEnabled":[],"EnableLUT":{"usage":[" :EnableLUT([boolean enable])"]},"GetPos":{"usage":["number, number, number :GetPos()"],"short_help":"Get the position of the viewer"},"GetRot":{"usage":["number, number, number :GetRot()"],"short_help":"Get the rotation angles of the view"},"SetScale":{"usage":[" :SetScale(number scale)"],"short_help":"Set the scale (zoom) of the view\nScale of 0 indicates Fit to View"},"header_text":"Methods","SetRot":{"usage":[" :SetRot(number x, number y, number z)"],"short_help":"Set the rotation of the view"},"SetPos":{"usage":["boolean :SetPos(number x, number y, [number z])"],"short_help":"Set the position of the viewer"},"SetAspectCorrection":{"usage":[" :SetAspectCorrection(boolean enable)"],"short_help":"Enables or disables aspect correction"},"GetScale":{"usage":["number :GetScale()"],"short_help":"Get the scale (zoom) of the view"},"ResetView":{"usage":[" :ResetView()"],"short_help":"Resets the display to default position etc"},"GetPosTable":{"short_help":"Get the position of the viewer as a table","usage":["table :GetPosTable()"],"description":"Returns:\n       x = table[1]\n       y = table[2]\n       z = table[3]"},"IsCheckerEnabled":[],"EnableChecker":{"usage":[" :EnableChecker([boolean enable])"],"short_help":"Enables or disables drawing a checker underlay"},"SaveFile":{"usage":[" :SaveFile(string filename)"],"short_help":"Save the currently displayed parameter"},"LoadFile":{"usage":[" :LoadFile(string filename)"],"short_help":"Load and display the contents of a file"},"AreGuidesShown":{"usage":["boolean :AreGuidesShown()"],"short_help":"Returns true if image guides are being displayed on the view"},"ShowGuides":{"usage":[" :ShowGuides(boolean enable)"],"short_help":"Shows or hides guides on the view"},"AreControlsShown":{"usage":["boolean :AreControlsShown()"],"short_help":"Returns true if controls are being displayed on the view"},"ShowControls":{"usage":[" :ShowControls(boolean enable)"],"short_help":"Shows or hides controls on the view"},"GetAspectCorrection":{"usage":["boolean :GetAspectCorrection()"],"short_help":"Returns true if the viewer is correcting the aspect of images"},"GetRotTable":{"short_help":"Get the rotation angles of the view as a table","usage":["table :GetRotTable()"],"description":"Returns:\n       x = table[1]\n       y = table[2]\n       z = table[3]"}},"attributes":{"REGB_Hide":{"type":"false","value":"boolean"},"REGB_SupportsDoD":{"type":"false","value":"boolean"},"REGS_Name":{"type":"GLViewer","value":"string"},"REGI_Version":{"type":"0","value":"number (integer)"},"REGI_ClassType":{"type":"0 = CT_Any","value":"number (integer)"},"REGB_Unpredictable":{"type":"false","value":"boolean"},"REGS_VersionString":{"type":"Built: Jul 19 2023","value":"string"},"REGS_ID":{"type":"GLViewer","value":"string"},"REGB_ControlView":{"type":"false","value":"boolean"},"REGI_Priority":{"type":"0","value":"number (integer)"}},"class_inheritance":["Object"]}