from Parameter import _Parameter
from TimeExtent import _TimeExtent
from Input import _Input
from ImageDomain import _ImageDomain
from TagList import _TagList
from Output import _Output
from TimeStamp import _TimeStamp
from Operator import _Operator


class _Request:

	#---Properties---#
	BaseTime: float
	"""
	Read Only
	"""
	SourceImg: _Parameter
	"""
	Read Only
	"""
	SourceImgValid: _TimeExtent
	"""
	Read Only
	"""
	Time: float
	"""
	Read Only
	"""

	#---Attributes---#
	REGB_Hide: bool

	REGB_SupportsDoD: bool

	REGS_Name: str

	REGI_Version: int

	REGI_ClassType: int

	REGB_Unpredictable: bool

	REGS_VersionString: str

	REGS_ID: str

	REGB_ControlView: bool

	REGI_Priority: int


	#---Methods---#
	def IsCompleted(self) -> bool:
		...
	def ClearInputData(self, inp: _Input, slot: int) -> bool:
		...
	def IsFailed(self) -> bool:
		...
	def ClearInputFlags(self, inp: _Input, flags: int, slot: int) -> bool:
		...
	def IsInputCurrent(self, inp: _Input, slot: int) -> bool:
		...
	def ClearReqFlags(self, flags: int) -> None:
		...
	def FreeAllInputs(self) -> None:
		...
	def IsIntermediate(self) -> bool:
		...
	def IsNoCache(self) -> bool:
		...
	def GetDoD(self) -> _ImageDomain:
		...
	def IsNoPreviewResize(self) -> bool:
		...
	def GetInputAttrs(self, inp: _Input, slot: int) -> _TagList:
		...
	def IsOutputCurrent(self, out: _Output) -> bool:
		...
	def GetInputBaseTime(self, inp: _Input, slot: int) -> _TimeStamp:
		...
	def IsOutputSet(self, out: _Output) -> bool:
		...
	def GetInputData(self, inp: _Input, slot: int) -> _Parameter:
		...
	def IsPending(self) -> bool:
		...
	def GetInputDataValid(self, inp: _Input, slot: int) -> _TimeExtent:
		...
	def IsPlayback(self) -> bool:
		...
	def info_text(self):
		...
	def IsPreCalc(self) -> bool:
		...
	def GetInputFlags(self, inp: _Input, slot: int) -> int:
		...
	def IsPreview(self) -> bool:
		...
	def GetInputRoI(self, inp: _Input, slot: int) -> _ImageDomain:
		...
	def IsProcessing(self) -> bool:
		...
	def GetInputTime(self, inp: _Input, slot: int) -> _TimeStamp:
		...
	def IsQuick(self) -> bool:
		...
	def GetOp(self) -> _Operator:
		...
	def IsQuiet(self) -> bool:
		...
	def GetOutputData(self, out: _Output) -> _Parameter:
		...
	def IsRemote(self) -> bool:
		...
	def IsSecondaryTime(self) -> bool:
		...
	def IsSerialised(self) -> bool:
		...
	def IsStampOnly(self) -> bool:
		...
	def LockInputData(self, inp: _Input, slot: int) -> None:
		...
	def LockOutputData(self, out: _Output) -> None:
		...
	def SetAllOutputsCurrent(self, current: bool) -> bool:
		...
	def SetInputAttrs(self, inp: _Input, tags: _TagList, slot: int) -> bool:
		...
	def SetInputBaseTime(self, inp: _Input, t: _TimeStamp, slot: int) -> bool:
		...
	def SetInputCurrent(self, inp: _Input, current: bool, slot: int) -> bool:
		...
	def SetInputData(self, inp: _Input, param: _Parameter, te: _TimeExtent, slot: int, flags: int) -> bool:
		...
	def SetInputFlags(self, inp: _Input, flags: int, slot: int) -> bool:
		...
	def SetInputTime(self, inp: _Input, t: _TimeStamp, slot: int) -> bool:
		...
	def SetOp(self, op: _Operator) -> bool:
		...
	def SetOutputCurrent(self, out: _Output, current: bool) -> bool:
		...
	def SetOutputData(self, out: _Output, param: _Parameter, te: _TimeExtent) -> bool:
		...
	def SetPri(self, pri: int, pending: int) -> None:
		...
	def SetReqAttrs(self, tags: _TagList) -> None:
		...
	def SetReqFlags(self, flags: int) -> None:
		...
	def Unlock(self) -> None:
		...
	def UnlockInputData(self, inp: _Input, slot: int) -> None:
		...
	def UnlockOutputData(self, out: _Output) -> None:
		...
	def IsInteractive(self) -> bool:
		...
	def IsNoMotionBlur(self) -> bool:
		...
	def GetFlags(self) -> int:
		...
	def FreeAllOutputs(self) -> None:
		...
	def GetOutputDataValid(self, out: _Output) -> _TimeExtent:
		...
	def GetInputDoD(self, inp: _Input, slot: int) -> _ImageDomain:
		...
	def GetPending(self) -> int:
		...
	def GetBaseTime(self) -> float:
		...
	def GetPri(self) -> int:
		...
	def Lock(self) -> None:
		...
	def GetRoI(self) -> _ImageDomain:
		...
	def IsInputSet(self, inp: _Input, slot: int) -> bool:
		...
	def GetTime(self) -> float:
		...
	def header_text(self):
		...

Request = _Request