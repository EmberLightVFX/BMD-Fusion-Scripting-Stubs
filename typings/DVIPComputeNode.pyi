from DVIPComputeNode DVIPComputeNodeRequest req import _DVIPComputeNode DVIPComputeNodeRequest req
from string kernelName import _string kernelName
from string source import _string source
from string kernelParamsName import _string kernelParamsName
from string kernelParams import _string kernelParams
from Image import _Image
from void import _void
from Request import _Request


class _DVIPComputeNode:

	#---Methods---#
	def GetErrorLog(self) -> str:
		...
	def SetWorkSize(self, w: int, h: int, d: int) -> None:
		...
	def GetKernelName(self) -> str:
		...
	def DVIPComputeNode(self) -> tuple[_DVIPComputeNode DVIPComputeNodeRequest req, _string kernelName, _string source, _string kernelParamsName, _string kernelParams]:
		"""
		DVIPComputeNode constructor
		"""
		...
	def AddInput(self, name: str, img: _Image) -> None:
		...
	def SetParamStructCopy(self, params: _void, size: int) -> None:
		...
	def GetParamsHash(self, paramStr: str) -> int:
		...
	def AddOutput(self, name: str, img: _Image) -> None:
		...
	def info_text(self):
		...
	def AddSampler(self, name: str, filterMode: int, addressMode: int, normCoordsMode: int) -> None:
		...
	def GetKernelParams(self) -> str:
		...
	def RunSession(self, req: _Request) -> bool:
		...
	def SetGlobalSize(self, w: int, h: int, d: int) -> None:
		...
	def header_text(self):
		...
	def ForceRebuild(self) -> None:
		...

DVIPComputeNode = _DVIPComputeNode