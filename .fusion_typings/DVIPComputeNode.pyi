from Request import Request_
from Image import Image_
from _non_existing import void_


class DVIPComputeNode_:

	#---Methods---#
	def SetParamStructCopy(self, params: void_, size: int) -> None:
		...
	def info_text(self) -> None:
		...
	def GetErrorLog(self) -> str:
		...
	def SetWorkSize(self, w: int, h: int, d: int) -> None:
		...
	def GetKernelName(self) -> str:
		...
	def AddSampler(self, name: str, filterMode: int, addressMode: int, normCoordsMode: int) -> None:
		...
	def DVIPComputeNode(self, req: Request_, kernelName: str, source: str, kernelParamsName: str, kernelParams: str) -> DVIPComputeNode_:
		"""
		DVIPComputeNode constructor
		"""
		...
	def AddInput(self, name: str, img: Image_) -> None:
		...
	def GetParamsHash(self, paramStr: str) -> int:
		...
	def AddOutput(self, name: str, img: Image_) -> None:
		...
	def RunSession(self, req: Request_) -> bool:
		...
	def header_text(self) -> None:
		...
	def GetKernelParams(self) -> str:
		...
	def SetGlobalSize(self, w: int, h: int, d: int) -> None:
		...
	def ForceRebuild(self) -> None:
		...

DVIPComputeNode = DVIPComputeNode_